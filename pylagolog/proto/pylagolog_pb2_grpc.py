# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import pylagolog.proto.pylagolog_pb2 as pylagolog__pb2


class DatalogStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ModRules = channel.stream_unary(
        '/pylagolog.Datalog/ModRules',
        request_serializer=pylagolog__pb2.ModifyRule.SerializeToString,
        response_deserializer=pylagolog__pb2.Result.FromString,
        )
    self.Queries = channel.stream_stream(
        '/pylagolog.Datalog/Queries',
        request_serializer=pylagolog__pb2.Query.SerializeToString,
        response_deserializer=pylagolog__pb2.QueryResult.FromString,
        )


class DatalogServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ModRules(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Queries(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DatalogServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ModRules': grpc.stream_unary_rpc_method_handler(
          servicer.ModRules,
          request_deserializer=pylagolog__pb2.ModifyRule.FromString,
          response_serializer=pylagolog__pb2.Result.SerializeToString,
      ),
      'Queries': grpc.stream_stream_rpc_method_handler(
          servicer.Queries,
          request_deserializer=pylagolog__pb2.Query.FromString,
          response_serializer=pylagolog__pb2.QueryResult.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'pylagolog.Datalog', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
